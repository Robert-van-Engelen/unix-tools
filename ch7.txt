# ch7.txt
# Chapter 7 - The Emacs Editor
# Created by Robert van Engelen
# Distributed under the GPL
________________________________________________________________________________


                    [0;1;34;94m‚ñÑ‚ñÑ[0m    [0;1;34;94m‚ñÑ[0;34m‚ñÑ[0m  [0;34m‚ñÑ‚ñÑ‚ñÑ[0m   [0;34m‚ñÑ‚ñÑ[0m   [0;34m‚ñÑ‚ñÑ[0;37m‚ñÑ‚ñÑ‚ñÑ‚ñÑ[0m   [0;37m‚ñÑ‚ñÑ‚ñÑ[0m  [0;37m‚ñÑ‚ñÑ‚ñÑ[0m 
                    [0;34m‚ñà‚ñà[0m    [0;34m‚ñà‚ñà[0m  [0;34m‚ñà‚ñà‚ñà[0m   [0;37m‚ñà‚ñà[0m   [0;37m‚ñÄ‚ñÄ‚ñà‚ñà‚ñÄ‚ñÄ[0m    [0;1;30;90m‚ñà‚ñà‚ñÑ‚ñÑ‚ñà‚ñà[0m  
                    [0;34m‚ñà‚ñà[0m    [0;34m‚ñà[0;37m‚ñà[0m  [0;37m‚ñà‚ñà‚ñÄ‚ñà[0m  [0;37m‚ñà‚ñà[0m     [0;1;30;90m‚ñà‚ñà[0m       [0;1;30;90m‚ñà‚ñà‚ñà‚ñà[0m   
                    [0;37m‚ñà‚ñà[0m    [0;37m‚ñà‚ñà[0m  [0;37m‚ñà‚ñà[0m [0;37m‚ñà‚ñà[0m [0;1;30;90m‚ñà‚ñà[0m     [0;1;30;90m‚ñà‚ñà[0m        [0;1;34;94m‚ñà‚ñà[0m    
                    [0;37m‚ñà‚ñà[0m    [0;37m‚ñà[0;1;30;90m‚ñà[0m  [0;1;30;90m‚ñà‚ñà[0m  [0;1;30;90m‚ñà‚ñÑ‚ñà‚ñà[0m     [0;1;34;94m‚ñà‚ñà[0m       [0;1;34;94m‚ñà‚ñà‚ñà‚ñà[0m   
                    [0;1;30;90m‚ñÄ‚ñà‚ñà‚ñÑ‚ñÑ‚ñà‚ñà‚ñÄ[0m  [0;1;30;90m‚ñà‚ñà[0m   [0;1;34;94m‚ñà‚ñà‚ñà[0m   [0;1;34;94m‚ñÑ‚ñÑ‚ñà‚ñà‚ñÑ‚ñÑ[0m    [0;34m‚ñà‚ñà[0m  [0;34m‚ñà‚ñà[0m  
                      [0;1;30;90m‚ñÄ‚ñÄ‚ñÄ‚ñÄ[0m    [0;1;34;94m‚ñÄ‚ñÄ[0m   [0;1;34;94m‚ñÄ‚ñÄ‚ñÄ[0m   [0;1;34;94m‚ñÄ‚ñÄ[0;34m‚ñÄ‚ñÄ‚ñÄ‚ñÄ[0m   [0;34m‚ñÄ‚ñÄ‚ñÄ[0m  [0;34m‚ñÄ‚ñÄ‚ñÄ[0m 

               [0;1;34;94m‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ[0;34m‚ñÑ[0m                      [0;37m‚ñÑ‚ñÑ‚ñÑ‚ñÑ[0m               
               [0;34m‚ñÄ‚ñÄ‚ñÄ‚ñà‚ñà‚ñÄ‚ñÄ‚ñÄ[0m                      [0;37m‚ñÄ[0;1;30;90m‚ñÄ‚ñà‚ñà[0m               
                  [0;34m‚ñà‚ñà[0m      [0;37m‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ[0m    [0;37m‚ñÑ‚ñà[0;1;30;90m‚ñà‚ñà‚ñà‚ñÑ[0m     [0;1;30;90m‚ñà‚ñà[0m      [0;1;34;94m‚ñÑ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ[0m 
                  [0;37m‚ñà‚ñà[0m     [0;37m‚ñà‚ñà‚ñÄ[0m  [0;1;30;90m‚ñÄ‚ñà‚ñà[0m  [0;1;30;90m‚ñà‚ñà‚ñÄ[0m  [0;1;30;90m‚ñÄ‚ñà‚ñà[0m    [0;1;34;94m‚ñà‚ñà[0m      [0;1;34;94m‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ[0m [0;34m‚ñÄ[0m 
                  [0;37m‚ñà‚ñà[0m     [0;1;30;90m‚ñà‚ñà[0m    [0;1;30;90m‚ñà‚ñà[0m  [0;1;30;90m‚ñà‚ñà[0m    [0;1;34;94m‚ñà‚ñà[0m    [0;1;34;94m‚ñà‚ñà[0m       [0;34m‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñà‚ñà‚ñÑ[0m 
                  [0;1;30;90m‚ñà‚ñà[0m     [0;1;30;90m‚ñÄ‚ñà‚ñà‚ñÑ‚ñÑ[0;1;34;94m‚ñà‚ñà‚ñÄ[0m  [0;1;34;94m‚ñÄ‚ñà‚ñà‚ñÑ‚ñÑ‚ñà‚ñà‚ñÄ[0m    [0;34m‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ[0m   [0;34m‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñà[0;37m‚ñà[0m 
                  [0;1;30;90m‚ñÄ‚ñÄ[0m       [0;1;34;94m‚ñÄ‚ñÄ‚ñÄ‚ñÄ[0m      [0;1;34;94m‚ñÄ[0;34m‚ñÄ‚ñÄ‚ñÄ[0m       [0;34m‚ñÄ‚ñÄ‚ñÄ‚ñÄ[0m    [0;37m‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ[0m  


                         #!Chapter 7 - The Emacs Editor!


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
title="Chapter 7 - The Emacs Editor"
if [ -d "$HOME/Courses/COP4342/tmp" ]; then workd=$HOME/Courses/COP4342/tmp; fi
demo 'cowsay -f bunny "Maxing Emacs on my iMac"'
________________________________________________________________________________

  #!Why Emacs?!

    Emacs is completely programmable: it takes the idea of programming to a
    higher level in that it maps arbitrary sequences of keystrokes to functions

    Emacs Lisp is a powerful version of the Lisp programming language, but it
    takes some guts to extend Emacs

      You can use Emacs as an IDE with packages such as cmake-ide, irony-mode
      (requires RTags), and flycheck

    Having a full language as its backend, it supports a great number of
    things, such as a built-in PDF viewer (DocView)

    The "editor war" is known for the vi versus Emacs arguments

      But simply use one or both editors based on the task at hand
      
      Vim evolved into a popular editor for programmers, plugins also convert
      vim into an IDE, e.g. tagbar (requires Ctags), neomake, neocomplete

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!Emacs Tutorial!

    After starting Emacs, type ^!^H! ^!t! to enter the online tutorial

    Type ^!^X! ^!^C! to exit Emacs

    A note on Emacs abbreviations for keys, which we will use throughout this
    chapter from now on:
    
      ^!C-x! stands for ^!^X! (CONTROL-X)

      ^!M-x! stands for META-x (or ALT-x, OPTION-x)

        META is case-sensitive, so ^!M-x! and ^!M-X! are different, where the
        latter should be typed as META-SHIFT-X

        ^!ESC! ^!x! can be used in place of ^!M-x!

      ^!C-M-v! stands for CONTROL-META-V (or ^!ESC! ^!C-v! if you prefer ^!ESC!)

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!Moving the cursor!

    ^!‚Üê!/^!C-b! and ^!‚Üí!/^!C-f! move by character back/forward

    ^!M-b! and ^!M-f! move by word back/forward

    ^!‚Üë!/^!C-p! and ^!‚Üì!/^!C-n! move by line up/down

    ^!C-a! and ^!C-e! move to begin/end of the line

    ^!M-a! and ^!M-e! move to begin/end of a sentence

    ^!M-{! and ^!M-}! move to begin/end of a paragraph

    ^!C-v!/^!PgUP! and ^!M-v!/^!PgDn! move by window size up/down

    ^!C-l! clear screen and redisplay all the text, moving the text around the
    cursor to the center of the screen

    ^!M-r! move to the middle of the screen

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!Repeat factor!

    Emacs commands can be repeated with a repeat count entered before the
    command to execute, either by typing ^!C-u! followed by a number !G!N!!
    or by holding META while typing the number, for example:

      ^!C-u! !G!12!! ^!C-n! moves 12 lines down

    Some commands behave differently with repeat factors:

      ^!C-u! !G!8!! ^!C-v! scrolls 8 lines, not 8 screens

      ^!C-u! !G!100!! ^!M-r! moves to line 100 (counting from 0)

    If a command takes too long, type ^!C-g! to quit

      This command also works to delete repeat factors after typing them

      This command also quits ^!ESC! when typed by mistake

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!Deleting text!

    ^!DEL! delete the character just before the cursor

    ^!C-d! delete the next character after the cursor

    ^!M-DEL! kill the word immediately before the cursor

    ^!M-d! kill the next word after the cursor

    ^!C-k! kill text from the cursor position to end of line

    ^!M-k! kill text to the end of the current sentence

    ^!C-w! kill text in the specified region, see the next page

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!Marking a region of text!

    ^!C-SPACE! marks the start of a region, then you can move the cursor to the
    end of the region to specify this region for a command, for example:

      ^!C-SPACE! ^!C-u! !G!8!! ^!C-n! ^!C-w! kills 9 lines of text

    ^!C-x! ^!C-x! moves to the start of the marked region

    Note: if ^!C-SPACE! does not work, try starting emacs with option *!-Q!:

      *!$ emacs -Q!       # start emacs without loading init file

      *!$ emacs -Q FILE!  # open _!FILE! to edit w/o loading init file

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!Yanking!

    Bringing back killed text is called "yanking"

      ^!C-y! inserts the last killed text at the current cursor position

    Yanking has a history in the "kill ring", so you can yank back earlier
    killed texts that are stored in the kill ring that is rotated:

      ^!M-y! erases last yanked text and replaces it with the next killed text
      by rotating the kill ring

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!Common C-x "character extend" commands!

    ^!C-x! ^!u! undo a change, ^!C-_ ! is a shortcut for undo, ^!C-f! ^!C-_ ! to undo the undo

    ^!C-x! ^!C-f! ^!FILE! ^!ENTER! open _!FILE! to edit

    ^!C-x! ^!C-s! save the file, ^!C-x! ^!s! save while asking confirmation

    ^!C-x! ^!C-w! ^!FILE! ^!ENTER! write to _!FILE!

    ^!C-x! ^!C-c! save all files and quit

    ^!C-x! ^!C-b! list buffers and ^!C-x! ^!b! ^!BUFFER! ^!ENTER! to edit a BUFFER

    ^!C-x! ^!1! close other windows (so only one is left open)

    ^!C-x! ^!2! split window horizontally, ^!C-x! ^!3! split window vertically

    ^!C-x! ^!o! select other window

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!Setting modes with M-x "named command extend"!

    ^!M-x! ^!text mode! ^!ENTER! enters text mode

    ^!M-x! ^!c mode! ^!ENTER! enters C mode for programming

    ^!M-x! ^!fundamental mode! ^!ENTER! enters the default mode

    Each major mode makes a few commands behave differently
    
      For example, there are commands for creating comments in a program, and
      since each programming language has a different idea of what a comment
      should look like, each major mode has to insert comments differently

    ^!M-x! ^!auto fill mode! ^!ENTER! break lines between words, this command toggles

      ^!C-u! !G!72!! ^!C-x! ^!f! sets text width to 72 characters

      ^!M-q! reformats the current paragraph

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!Searching and replacing text!

    ^!C-s! ^!TEXT! ^!ENTER! searches for text, then ^!C-s! and ^!C-r! for next/prev

    ^!C-r! ^!TEXT! ^!ENTER! reverse searches for text, then ^!C-s! and ^!C-r! for next/prev

    ^!C-M-s! ^!REGEX! ^!ENTER! searches for matching text, then ^!C-s! and ^!C-r!

    ^!C-M-r! ^!REGEX! ^!ENTER! reverse searches for matching text, then ^!C-s! and ^!C-r!

    ^!M-x! ^!repl s! ^!ENTER! ^!STRING! ^!ENTER! ^!TEXT! replace STRING with TEXT

    ^!M-x! ^!repl reg! ^!ENTER! ^!REGEX! ^!ENTER! ^!TEXT! replace REGEX with TEXT

    where ^!REGEX! has meta characters . * + ? [...] [^...] \\| \\( \\) \\w \\W and
    anchors ^ $ \\< \\> \\b \\B

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!Executing shell commands!

    !^!M-! !! ^!COMMAND! ^!ENTER! executes the shell COMMAND

    ^!C-u! !^!M-! !! ^!COMMAND! ^!ENTER! executes COMMAND and inserts its output

    ^!M-|! ^!COMMAND! ^!ENTER! executes COMMAND on the current region of text

    ^!C-u! ^!M-|! ^!COMMAND! ^!ENTER! executes COMMAND on the region of text and
    inserts its output

    ^!M-x! ^!compile! ^!ENTER! ^!NAME! ^!ENTER! executes the following command

      *!$ make -k NAME!

    on the background and stores its output in the buffer named "compilation"

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!The .emacs strtup file!

    Create a _!.emacs! startup file in your home directory and add the Emacs
    parameters that you generally want to use

    For example:
    !*!
      ;; get DEL character from backspace key
      (keyboard-translate ?\\C-h ?\\177)
      ;; indent for C mode
      (setq c-indent-level 8)
    !!
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!References!

    The GNU Emacs reference card:
    
      !m!https://www.gnu.org/software/emacs/refcards/pdf/refcard.pdf!!

    A guided tour of Emacs:

      !m!https://www.gnu.org/software/emacs/tour/!!

    The GNU Emacs manual:

      !m!https://www.gnu.org/software/emacs/manual/pdf/emacs.pdf!!

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
