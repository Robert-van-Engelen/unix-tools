# ch15.txt
# Chapter 15 - sed
# Created by Robert van Engelen
# Distributed under the GPL
________________________________________________________________________________


                    [0;1;34;94mâ–„â–„[0m    [0;1;34;94mâ–„[0;34mâ–„[0m  [0;34mâ–„â–„â–„[0m   [0;34mâ–„â–„[0m   [0;34mâ–„â–„[0;37mâ–„â–„â–„â–„[0m   [0;37mâ–„â–„â–„[0m  [0;37mâ–„â–„â–„[0m 
                    [0;34mâ–ˆâ–ˆ[0m    [0;34mâ–ˆâ–ˆ[0m  [0;34mâ–ˆâ–ˆâ–ˆ[0m   [0;37mâ–ˆâ–ˆ[0m   [0;37mâ–€â–€â–ˆâ–ˆâ–€â–€[0m    [0;1;30;90mâ–ˆâ–ˆâ–„â–„â–ˆâ–ˆ[0m  
                    [0;34mâ–ˆâ–ˆ[0m    [0;34mâ–ˆ[0;37mâ–ˆ[0m  [0;37mâ–ˆâ–ˆâ–€â–ˆ[0m  [0;37mâ–ˆâ–ˆ[0m     [0;1;30;90mâ–ˆâ–ˆ[0m       [0;1;30;90mâ–ˆâ–ˆâ–ˆâ–ˆ[0m   
                    [0;37mâ–ˆâ–ˆ[0m    [0;37mâ–ˆâ–ˆ[0m  [0;37mâ–ˆâ–ˆ[0m [0;37mâ–ˆâ–ˆ[0m [0;1;30;90mâ–ˆâ–ˆ[0m     [0;1;30;90mâ–ˆâ–ˆ[0m        [0;1;34;94mâ–ˆâ–ˆ[0m    
                    [0;37mâ–ˆâ–ˆ[0m    [0;37mâ–ˆ[0;1;30;90mâ–ˆ[0m  [0;1;30;90mâ–ˆâ–ˆ[0m  [0;1;30;90mâ–ˆâ–„â–ˆâ–ˆ[0m     [0;1;34;94mâ–ˆâ–ˆ[0m       [0;1;34;94mâ–ˆâ–ˆâ–ˆâ–ˆ[0m   
                    [0;1;30;90mâ–€â–ˆâ–ˆâ–„â–„â–ˆâ–ˆâ–€[0m  [0;1;30;90mâ–ˆâ–ˆ[0m   [0;1;34;94mâ–ˆâ–ˆâ–ˆ[0m   [0;1;34;94mâ–„â–„â–ˆâ–ˆâ–„â–„[0m    [0;34mâ–ˆâ–ˆ[0m  [0;34mâ–ˆâ–ˆ[0m  
                      [0;1;30;90mâ–€â–€â–€â–€[0m    [0;1;34;94mâ–€â–€[0m   [0;1;34;94mâ–€â–€â–€[0m   [0;1;34;94mâ–€â–€[0;34mâ–€â–€â–€â–€[0m   [0;34mâ–€â–€â–€[0m  [0;34mâ–€â–€â–€[0m 

               [0;1;34;94mâ–„â–„â–„â–„â–„â–„â–„[0;34mâ–„[0m                      [0;37mâ–„â–„â–„â–„[0m               
               [0;34mâ–€â–€â–€â–ˆâ–ˆâ–€â–€â–€[0m                      [0;37mâ–€[0;1;30;90mâ–€â–ˆâ–ˆ[0m               
                  [0;34mâ–ˆâ–ˆ[0m      [0;37mâ–„â–ˆâ–ˆâ–ˆâ–ˆâ–„[0m    [0;37mâ–„â–ˆ[0;1;30;90mâ–ˆâ–ˆâ–ˆâ–„[0m     [0;1;30;90mâ–ˆâ–ˆ[0m      [0;1;34;94mâ–„â–„â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–„[0m 
                  [0;37mâ–ˆâ–ˆ[0m     [0;37mâ–ˆâ–ˆâ–€[0m  [0;1;30;90mâ–€â–ˆâ–ˆ[0m  [0;1;30;90mâ–ˆâ–ˆâ–€[0m  [0;1;30;90mâ–€â–ˆâ–ˆ[0m    [0;1;34;94mâ–ˆâ–ˆ[0m      [0;1;34;94mâ–ˆâ–ˆâ–„â–„â–„â–„[0m [0;34mâ–€[0m 
                  [0;37mâ–ˆâ–ˆ[0m     [0;1;30;90mâ–ˆâ–ˆ[0m    [0;1;30;90mâ–ˆâ–ˆ[0m  [0;1;30;90mâ–ˆâ–ˆ[0m    [0;1;34;94mâ–ˆâ–ˆ[0m    [0;1;34;94mâ–ˆâ–ˆ[0m       [0;34mâ–€â–€â–€â–€â–ˆâ–ˆâ–„[0m 
                  [0;1;30;90mâ–ˆâ–ˆ[0m     [0;1;30;90mâ–€â–ˆâ–ˆâ–„â–„[0;1;34;94mâ–ˆâ–ˆâ–€[0m  [0;1;34;94mâ–€â–ˆâ–ˆâ–„â–„â–ˆâ–ˆâ–€[0m    [0;34mâ–ˆâ–ˆâ–„â–„â–„[0m   [0;34mâ–ˆâ–„â–„â–„â–„â–„â–ˆ[0;37mâ–ˆ[0m 
                  [0;1;30;90mâ–€â–€[0m       [0;1;34;94mâ–€â–€â–€â–€[0m      [0;1;34;94mâ–€[0;34mâ–€â–€â–€[0m       [0;34mâ–€â–€â–€â–€[0m    [0;37mâ–€â–€â–€â–€â–€â–€[0m  


                         #!Chapter 15 - sed!


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
title="Chapter 15 - sed"
if [ -d "$HOME/Courses/COP4342/tmp" ]; then workd=$HOME/Courses/COP4342/tmp; fi
demo 'cowsay "I said it: use sed to stream ed!"'
________________________________________________________________________________

  #!sed!

    The *!sed! (stream editor) utility is a powerful batch (noninteractive) editor

    *!sed 'sed script goes here' FILE1 FILE2...! applies a list of sed commands
    to the specified files or to stdin when no files are specified

    *!sed -f script.sed FILE1 FILE2...! applies _!script.sed! to the specified
    files or to stdin when no files are specified

    Options:

      *!-n! do not copy lines to stdout except as specified by *!print! instructions

      *!-i EXTENSION! edit file in place, rather than sending the changes to
      stdout, using *!EXTENSION! to save a backup file

      *!-f FILE! read sed script _!FILE!

      *!-e COMMAND! append the *!COMMAND! to the list of commands to perform

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!sed scripts!

    A sed script consists of a sequence of lines with commands:

      *!ADDRESS,ADDRESS COMMAND ARG1 ARG2 ...!

    where *!ADDRESS! and *!,ADDRESS! are optional

    The sed utility performs the following actions given input:

      1. read one line of input from the file(s) specified

      2. for each command in the script addressed by *!ADDRESS,ADDRESS! (when
         provided, otherwise the action is unconditional), perform the
         corresponding *!COMMAND! on the line of input

      3. repeat step 2 until all commands have been performed on the current
         line of input

      4. go to 1 if there is another line of input or another file to process

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!sed addresses!

    A sed *!ADDRESS! is one of the following:

      *!NUM! a line number or *!\$! which represents the last line

      *!/PATTERN/! a sed regular expression pattern, selects lines matching the
      specified pattern, the *!/! delimiters are often used but arbitrary in sed

    *!ADDRESS1,ADDRESS2! selects all lines from *!ADDRESS1! that matches a line
    to the *!ADDRESS2! that matches a line

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!sed example!

    This example uses the *!s///g! command that we have seen earlier with Vim
    to substitute text with *!s/PATTERN/TEXT/g! where *!g! stands for global to
    continue substituting more matches on the same line:

      *!$ cat surprise.txt!
      Hi!
      I bought you a present! I think you will like my present.
      *!$ sed 's/present/donkey/g' surprise.txt!
      Hi!
      I bought you a donkey! I think you will like my donkey.

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
cat > $workd/ch15_demo_surprise.txt << EOF
Hi!
I bought you a present! I think you will like my present.
EOF
demo 'cat ch15_demo_surprise.txt' "sed 's/present/donkey/g' ch15_demo_surprise.txt"
________________________________________________________________________________

  #!sed regular expressions!

      *!.!                  wildcard, matches any character except newline

      *![abc0-9]!           character class with ranges, *![^abc0-9]! is negated

      *!\(PATTERN\)!        grouping (group capture)

      *!PATTERN*!           zero or more

      *!^PATTERN!           match at begin of line

      *!PATTERN\$!           match at end of line

    Use *!\\n! to refer to the nth group capture contents matched

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!sed regular expressions!

    Use sed with option *!-E! to enable extended regular expression syntax,
    which adds the following constructs:

      *!PATTERN1|PATTERN2! alternation

      *!(PATTERN)!         grouping (group capture)

      *!PATTERN?!          zero or one

      *!PATTERN+!          one or more

      *!PATTERN{N}!        N times

      *!PATTERN{N,}!       N or more times

      *!PATTERN{N,M}!      N to M times

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!sed examples!

    *!$ cat surprise.txt!
    Hi!
    I bought you a present! I think you will like my present.
    !*!$ sed -e 's/[Hh]i!/Hello,/' -e 's/^I/We/' surprise.txt!!
    Hello,
    We bought you a present! I think you will like my present.

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
demo 'cat ch15_demo_surprise.txt' "sed -e 's/[Hh]i!/Hello,/' -e 's/^I/We/' ch15_demo_surprise.txt"
________________________________________________________________________________

  #!sed commands!

    *!a! append text to the selected line:

      *!a\\!
      *!  TEXT\\!
      *!  ...\\!
      *!  TEXT!

    *!c! change the selected line and replace it with new text:

      *!c\\!
      *!  TEXT\\!
      *!  ...\\!
      *!  TEXT!

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!sed commands continued!

    *!i! insert text before the selected line:

      *!i\\!
      *!  TEXT\\!
      *!  ...\\!
      *!  TEXT!

    *!d! delete the selected line

    *!p! print selected line immediately, subsequent commands will not change it,
    this command is best used with sed option *!-n!

    *!q! quit sed immediately

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!sed examples!

    *!/TODO/i\\!
    *!/* This line is not finished: */! # inserts a line above the line with TODO

    *!10d!                              # delete line 10

    *!10,20d!                           # delete line 10 to 20

    *!/TODO/p!                          # print lines with TODO only when used
                                     # with option *!-n!

    *!/\\/\\*/,/\\*\\//d!                   # delete from line with /* to line with */

    *!/^#/d!                            # deletes lines that start with a #

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!sed commands continued!

    *!s/PATTERN/TEXT/FLAGS! substitute text that matches *!PATTERN! with *!TEXT!,
    where *!FLAGS! is one or more of:

      *!NUM! number: make substitution only for the *!NUM!'th match

      *!g! global: replace all nonoverlapping matches of *!PATTERN! on a line

      *!p! print: print the modified line immediately

      *!w FILE! write: sends modified line to _!FILE!

      A *!&! in the *!TEXT! is replaced by the text that matches the *!PATTERN!

      A *!\\NUM! in the *!TEXT! is replaced by the text that is captured by the
      *!NUM!'th *!\\(...\\)! group, *!\\1! is the text of the first group, *!\\2! is
      the text of the second group, etc.

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!sed examples!

    *!s/#.*//!                       # remove #-comments (replace with empty)

    *!s/[A-Z]{3}/"&"/g!              # quote all 3-letter acronyms
                                  # this uses ERE syntax with option *!-E!

    *!s/the \\([Uu]nix\\) system/\\1/g! # remove "the" and "system"

    *!s/'\([^']\)*'/"\\1"/g!          # replace '-quoted strings by "-quoted strings

    *!$ sed 's/^[^0-9]*\\([0-9].*$\\)/\\1/' << 'END'!  # note the use of 'END'
    *!> Three years from now it will be 2021 and I will be 27 years old.!
    *!> My sister will be 25 years of age.!
    *!> And I will spend \$100 on presents!
    *!> END!
    2021 and I will be 27 years old.
    25 years of age.
    100 on presents

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!sed control structures!

    You can use!*! ! !!to negate a pattern match

    !*!ADDRESS,ADDRESS ! COMMAND ARG1 ARG2 ...!! selects lines not matched by
    the addresses specified, for example !*!3!d!! deletes all lines except line 3

    You can use *!{! *!}! to group commands and use *!;! to separate commands
    on the same line, for example:

      *!$ sed -n '/TODO/ { s/blame/praise/g; p; }' buggy.cpp!

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
cat > $workd/ch15_demo_buggy.cpp << EOF
#include <stdio.h>
/*
TODO: This simple example is created by Sam, blame him for this stuff...
*/
int main()
{
  printf("Hello world!\n");
  return 0;
}
EOF
demo 'cat ch15_demo_buggy.cpp' "sed -n '/TODO/ { s/blame/praise/g; p; }' ch15_demo_buggy.cpp"
________________________________________________________________________________

  #!Advanced sed feature: the hold space!

    *!sed! reads each line into the "pattern space" and modifies its contents
    by the specified commands

    You can use the "hold space" to store lines from the pattern space

    *!h! hold: copies the pattern space to the hold space

    *!H! hold: appends a newline and the pattern space to the hold space

    *!g! get: copies the hold space to the pattern space

    *!G! get: appends a newline and the hold space to the pattern space

    *!x! exchange: swaps the hold space with the pattern space

    *!n! next: read the next line into the pattern space

    *!N! next: append a newline and the next line to the pattern space

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
nodemo
________________________________________________________________________________

  #!sed example, see also Ch.15 examples pages 658-668!

    *!$ cat s1.sed!
    h; # copy pattern space (line read) to the hold space
    n; # read the next line into the pattern space
    p; # print the pattern space
    g; # copy the hold space to the pattern space
    p; # print the pattern space
    *!$ cat lines!
    Line one.
    The second line.
    The third.
    This is line four.
    Five.
    This is the sixth sentence.
    This is line seven.
    Eight and last.
    *!$ sed -nf s1.sed lines!
    The second line.
    Line one.
    This is line four.
    The third.
    This is the sixth sentence.
    Five.
    Eight and last.
    This is line seven.
    
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
cat > $workd/ch15_demo_s1.sed << EOF
h; # copy pattern space (line read) to the hold space
n; # read the next line into the pattern space
p; # print the pattern space
g; # copy the hold space to the pattern space
p; # print the pattern space
EOF
cat > $workd/ch15_demo_lines << EOF
Line one.
The second line.
The third.
This is line four.
Five.
This is the sixth sentence.
This is line seven.
Eight and last.
EOF
demo 'cat ch15_demo_s1.sed' 'cat ch15_demo_lines' 'sed -nf ch15_demo_s1.sed ch15_demo_lines'
